name: Deploy Slim Docker App to AWS

on:
  push:
    branches: [ main ]
    paths:
      - 'back.end/slim-docker-app/**'
      - '.github/workflows/deploy-slim-docker-app.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: terraform init
      working-directory: ./back.end/slim-docker-app/terraform

    - name: Terraform Plan
      run: terraform plan -out=tfplan
      working-directory: ./back.end/slim-docker-app/terraform

    - name: Terraform Apply
      run: terraform apply -auto-approve tfplan
      working-directory: ./back.end/slim-docker-app/terraform

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: slim-docker-app
        IMAGE_TAG: ${{ github.sha }}
      run: |
        cd back.end/slim-docker-app
        docker-compose build
        docker tag slim-docker-app_app:latest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Update ECS service
      run: |
        aws ecs update-service --cluster slim-docker-app-cluster --service slim-docker-app-service --force-new-deployment
